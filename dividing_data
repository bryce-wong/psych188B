# divde_data for a single subject

def divide_data(subject):
	#input parameter is the data of one subject
	
	#output parameter is the cleaned matrix for the subject
	big_mat = []
	
	import numpy as np

	#create a list just to iterate through
	chunks = [0,1,2,3,4,5,6,7,8,9,10]
	
	for chunk in chunks:
		#pull out chunk based on the chunk number there
		current_chunk = split2chunk(subject['labels'],subject['features'],chunk)
	
		#create a list to iterate through
		labels = ['faces','cats','bottles','shoes','scissors','houses','chairs','scramblepix']

		
    	faces = chunk[chunk[:,0]=='face']
    	cats = chunk[chunk[:,0]=='cat']
    	bottles = chunk[chunk[:,0]=='bottle']
    	shoes = chunk[chunk[:,0]=='shoe']
    	scissors = chunk[chunk[:,0]=='scissor']
    	houses = chunk[chunk[:,0]=='house']
    	chairs = chunk[chunk[:,0]=='chair']
    	controls = chunk[chunk[:,0]=='scramblepix']
	
		
	
		for label in lists:
			#for each chunk, pull out subset based on the label
			current_label = split2chunk(subject['labels'],subject['features'],label)
    		
			#transform each category matrix into a numpy array
    		current_label = np.array(current_label)
		
    		#average each numpy array into a single row
    		current_label = np.mean(current_label, axis=0)
			
			#add to big matrix holding averaged trials for each label from each chunk
			big_mat.append(current_label)
		
	#subtract the averaged rest values from every trial
	avg_rest = get_rest(subject
	
	big_mat =np.array(big_mat)
	
	return big_mat
	
